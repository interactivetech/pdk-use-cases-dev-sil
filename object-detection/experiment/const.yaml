name: PDK Object Detection Demo
workspace: Andrew
project: PDK Demo
bind_mounts:
- container_path:  /mnt/efs/shared_fs/determined/
  host_path:  /mnt/efs/shared_fs/determined/
  propagation: rprivate
  read_only: false
data:
    pachyderm:
        host:
        port:
        project:
        repo:
        branch:
        token:
        previous_commit:
profiling:
 enabled: true
 begin_on_batch: 0
 end_after_batch: null
hyperparameters:
    lr: .01
    momentum: 0.9
    global_batch_size: 16
    weight_decay: 1.0e-4
    gamma: 0.1
    warmup: linear
    warmup_iters: 20
    warmup_ratio: 0.1 # The fraction between 0-1 that defines the percentage of lr you want to start the lr at
    finetune_ckpt: 
        3: "/mnt/efs/shared_fs/determined/nb_fs/weights/frcnn_3_xview.pth"
        4: "/mnt/efs/shared_fs/determined/nb_fs/weights/frcnn_4_xview.pth"
    pretrained_model: "/mnt/efs/shared_fs/determined/nb_fs/weights/frcnn_xview.pth"
    #finetune_ckpt: "/lus/aiholus1/disk/andrew.mendez/model_479.pth"
    step1: 280 
    step2: 400 
    model: fasterrcnn_resnet50_fpn
    # Dataset
    #dataset_file: coco
    #backend: local # specifiy the backend you want to use.  one of: gcs, aws, fake, local
    #data_dir: "/lus/aiholus1/disk/andrew.mendez/xview_dataset/" # bucket name if using gcs or aws, otherwise directory to dataset
    #masks: false
    num_workers: 4
    #device: cuda
environment:
    image: mendeza/obj-det-pdk-train-env:0.0.3
    environment_variables:
        - NCCL_DEBUG=INFO
        # You may need to modify this to match your network configuration.
        - NCCL_SOCKET_IFNAME=ens,eth,ib

scheduling_unit: 400
min_validation_period:
    batches: 5 # For training

searcher:
  name: single
  metric: mAP
  smaller_is_better: True
  max_length:
    batches: 96
resources:
    slots_per_trial: 1
    shm_size: 2000000000
max_restarts: 0

entrypoint: python3 -m determined.launch.torch_distributed --trial model_def:ObjectDetectionTrial
